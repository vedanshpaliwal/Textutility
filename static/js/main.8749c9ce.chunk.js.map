{"version":3,"sources":["logo.svg","components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","useState","setMode","marginTop","marginBottom","marginRight","marginLeft","paddingTop","paddingBottom","paddingLeft","paddingRight","borderRadius","styling","className","onChange","e","console","log","target","value","mode","href","title","type","id","class","style","onClick","document","body","backgroundColor","color","Textform","text","setText","heading","for","rows","newtext","toUpperCase","getElementById","select","setSelectionRange","navigator","clipboard","writeText","split","length","defaultProps","home","Alert","alert","role","word","lower","toLowerCase","charAt","slice","capitilize","msg","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8749c9ce.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React ,{useState} from \"react\";\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  const [mode, setMode] = useState('dark');\r\n\r\n   const danger = () =>{\r\n     console.log('danger is clicked')\r\n     setMode('danger')\r\n     document.body.style.backgroundColor =\"red\"\r\n         document.body.style.color =\"white\"\r\n        //  props.showAlert(\"Danger Mode has been enabled\",\"success\")\r\n        // setInterval(()=>{\r\n        //   document.title = \"DANGER MODE ENABLED\"\r\n        // },2000);\r\n        // setInterval(()=>{\r\n        //   document.title = \"TEXTUTILS\"\r\n        // },1500);\r\n   }\r\n   const success = () =>{\r\n    console.log('success is clicked')\r\n    setMode('success')\r\n    document.body.style.backgroundColor =\"green\"\r\n    document.body.style.color =\"white\"\r\n    // props.showAlert(\"Danger Mode has been enabled\",\"success\")\r\n  }\r\n  const info = () =>{\r\n    console.log('info is clicked')\r\n    setMode('info')\r\n    document.body.style.backgroundColor =\"skyBlue\"\r\n    document.body.style.color =\"white\"\r\n    // props.showAlert(\"Danger Mode has been enabled\",\"success\")\r\n  }\r\n  const primary = () =>{\r\n    console.log('primary is clicked')\r\n    setMode('primary')\r\n    document.body.style.backgroundColor =\"#8b8bcd\"\r\n    document.body.style.color =\"white\"\r\n    // props.showAlert(\"Danger Mode has been enabled\",\"success\")\r\n  }\r\n  const theme = (e) =>{\r\n    console.log('handleupchange')\r\n    setMode(e.target.value)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n  const [modetext, setModetext] = useState(\"Enable Dark Mode\");\r\n  const toggleText = ()=>{\r\n    if(props.mode === \"light\")\r\n    {\r\n      setModetext(\"Enable Light Mode\")\r\n    }\r\n    else{\r\n     setModetext(\"Enable Dark Mode\")\r\n\r\n    }\r\n }\r\n \r\n const [styling, setStyling] = useState(\r\n  {\r\n    marginTop: \"1px\",\r\n    marginBottom:\"1px\",\r\n    marginRight:\"6px\",\r\n    marginLeft:\"6px\",\r\n    paddingTop:\" 9px\",\r\n    paddingBottom:\" 9px\",\r\n    paddingLeft: \"10px\",\r\n    paddingRight:\" 10px\",\r\n    \r\n    borderRadius:\" 50%\"\r\n  })\r\n  return (\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg navbar-dark bg-dark`} onChange={theme} >\r\n        <a className={`navbar-brand text-${props.mode===\"light\" ? \"black\" : \"light\"}`} href=\"#\">\r\n         { props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul class=\"navbar-nav mr-auto\">\r\n      <li class=\"nav-item active\">\r\n        <a class=\"nav-link\" href=\"#\">Home <span class=\"sr-only\">(current)</span></a>\r\n      </li>\r\n      <li class=\"nav-item active\">\r\n        <a class=\"nav-link\" href=\"#\">About</a>\r\n      </li>\r\n          </ul>\r\n          <div className=\"btn btn-primary\" style={styling}   onClick={primary} >\r\n             \r\n</div>\r\n<div className=\"btn btn-info\" onClick={info}  style={styling}>\r\n  \r\n  </div>\r\n  <div className=\"btn btn-success\" onClick={success} style={styling}    >\r\n     \r\n  </div>\r\n  <div className=\"btn btn-danger\" onClick={danger} style={styling}   >\r\n    \r\n  </div>\r\n  <label style={styling}>Select Theme</label>\r\n          {/* <div className={`custom-control custom-switch text-${props.mode===\"light\" ? \"dark\" : \"light\"}`}>\r\n  <input type=\"checkbox\" className=\"custom-control-input\" onClick = {props.toggleMode} id=\"customSwitch1\"/>\r\n  <label className=\"custom-control-label \" htmlFor=\"customSwitch1\" onClick = {toggleText}>{modetext}</label>\r\n</div> */}\r\n          {/* <form className=\"form-inline my-2 my-lg-0\">\r\n            <input\r\n              className=\"form-control mr-sm-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button\r\n              className=\"btn btn-outline-success my-2 my-sm-0\"\r\n              type=\"submit\"\r\n            >\r\n              Search\r\n            </button>\r\n          </form> */}\r\n        </div>\r\n        \r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n//these are the properties types which are needed to be seted \r\nNavbar.propTypes = {\r\n    title : PropTypes.string.isRequired,home : PropTypes.string\r\n}\r\nNavbar.defaultProps = {\r\n    title :'Please set title here',\r\n    home : 'Please set home here'\r\n}","import React ,{ useState } from \"react\";\r\n\r\nexport default function Textform(props) {   //usestate used here is hooks hooks are used tp use class property in the function\r\n    const handleUpclick = () =>{\r\n        console.log('handleupclick')\r\n        let newtext = text.toUpperCase()\r\n        setText(newtext)\r\n    }\r\n    const handleonchange = (e) =>{\r\n        console.log('handleupchange')\r\n        setText(e.target.value)\r\n    }\r\n\r\n    const handlecopy = () => {\r\n        console.log(\"I am happy\");\r\n        var text = document.getElementById('myBox');\r\n        text.select();\r\n        text.setSelectionRange(0,9999);\r\n        navigator.clipboard.writeText(text.value);\r\n        \r\n    }\r\n\r\n    const [text, setText] = useState(\"Enter text here\");\r\n    return (\r\n        <div>\r\n\r\n            <h1 class=\"my-5\">{props.heading}</h1>\r\n            <div class=\"mb-3\">\r\n                <label for=\"exampleFormControlTextarea1\">Enter Your Text Below</label>\r\n                <textarea\r\n                    class=\"form-control\"\r\n                    id=\"myBox\" value={text} onChange={handleonchange}\r\n                    rows=\"8\"></textarea>\r\n                    <button className=\"btn btn-warning my-1\" onClick={handleUpclick}>Convert to UpperCASE</button>\r\n                    <button  className=\"btn btn-warning my-1 mx-2\" onClick ={handlecopy}>Copy Text</button>\r\n            </div>\r\n            <div className = \"my-4 container\">\r\n              <h1>Your Text Summary</h1>\r\n              <p>{text.split(\" \").length - 1} words and {text.length} characters</p>\r\n              <p>{0.008 * text.split(\" \").length }Minutes read</p>\r\n              <h3>Preview</h3>\r\n              <p>{text}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\n\r\nexport const Alert = (props) => {\r\n    const capitilize = (word)=>{\r\n        const lower = word.toLowerCase()\r\n        return  lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show container`} role=\"alert\">\r\n        <strong>{capitilize(props.alert.type)}  </strong> : {props.alert.msg}\r\n  <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n    )\r\n}\r\n\r\nexport default Alert","import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\n// import About from './components/About';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\nfunction App() {\n    \n  // const toggleMode = (e)=>{\n  //   console.log(\"toggle mode called\")\n  //   document.getElementById(\"primary\")\n  //   document.getElementById(\"success\")\n  //   document.getElementById(\"danger\")\n  //   document.getElementById(\"info\")\n\n  //   if(e.id  === \"danger\")\n  //   {\n  //     setMode(\"danger\")\n  //     console.log(\"danger clicked\")\n  //     document.body.style.backgroundColor =\"#343a40\"\n  //     document.body.style.color =\"white\"\n  //     showAlert(\"Danger Mode has been enabled\",\"success\")\n  \n  //   }\n  //   else if(e.id  === \"success\"){\n  //     setMode(\"success\")\n  //     document.body.style.backgroundColor = \"whitesmoke\"\n  //     document.body.style.color = \"black\"\n  //     showAlert(\"Light mode has been enabled\",\"danger\")\n\n  //   }\n  //   else if(e.id  === \"info\"){\n  //     setMode(\"info\")\n      \n  //     document.body.style.backgroundColor = \"whitesmoke\"\n  //     document.body.style.color = \"black\"\n  //     showAlert(\"Light mode has been enabled\",\"danger\")\n\n  //   }\n  //   else if(e.id  === \"primary\"){\n  //     setMode(\"primary\")\n  //     document.body.style.backgroundColor = \"whitesmoke\"\n  //     document.body.style.color = \"black\"\n  //     showAlert(\"Light mode has been enabled\",\"danger\")\n\n  //   }\n  // }\n  // const themeChange = (e)=>{\n  //   console.log(\"theme change is called\")\n  //   setMode(e.target.value)\n  // }\n  const [alert, setAlert] = useState(null)\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg : message,\n      type : type\n  })\n  }\n  return (\n    <>\n   {/* {/* <Router> */}\n   <Navbar title = \"TextUtils\" home = \"Home\"  />\n   <Alert alert={alert}></Alert>\n   {/* <Switch> */}\n          {/* <Route exact path=\"/about\"> */}\n            {/* <About /> */}\n          {/* </Route> */} */}\n          \n          {/* <Route exact path=\"/\"> */}\n          <div className = \"container my-3\">\n   <Textform heading = \"Passes Heading\"/>\n   </div>\n          {/* </Route>\n        </Switch>\n   */}\n\n  \n   {/* <About></About> */}\n   {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}